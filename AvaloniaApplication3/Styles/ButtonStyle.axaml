<Style xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Design.PreviewWith>
    <Border Padding="20" Background="{DynamicResource PrimaryBackgroundGradient}" Width="600">
      <!-- Add Controls for Previewer Here -->
      <Grid ColumnDefinitions="*,*">
	      <StackPanel Spacing="20">
		      <Button Classes="subtle" Content="Subtle" ></Button>
		      <Button Classes="outline" Content="Outline"></Button>
		      <Button Classes="alert" Content="alert"></Button>
		      <Button Classes="small" Content="small"></Button>
		      <iconButton  Content="Home" IconText="î‹„" HorizontalAlignment="Stretch" VerticalAlignment="Center">
		      </iconButton >
		      <Button Grid.Row="1" HorizontalAlignment="Left">
			      <Label Classes="icon-only"  Content="î‹„"></Label>
		      </Button>
	      </StackPanel>
<StackPanel Grid.Column="1" Spacing="20">
	<CheckBox></CheckBox>
	<CheckBox> has contents </CheckBox>
</StackPanel>
      </Grid>
		

	
		</Border>
	  </Design.PreviewWith>
	
  <!-- Add Styles Here -->
	<Style Selector="Window">
		<Setter Property="FontFamily" Value="{DynamicResource Nunito}"></Setter>
	</Style>

	
<!-- Button Style Here -->
  <!-- para Button fixed -->
	<Style Selector=":is(Button):not(CheckBox)">
		<Setter Property="FontSize" Value="17"></Setter>
		<Setter	Property="Padding" Value="10 4 10 4"></Setter>
		<Setter Property="CornerRadius" Value="10"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
	</Style>
  <!-- Normal Button -->
  <Style Selector=":is(Button):not(CheckBox)">
	  <Setter Property="Foreground" Value="Black"></Setter>
	  <Setter Property="Background" Value="{DynamicResource ResourceKey=PrimaryButtonBackgroundGradient}"></Setter>
  </Style>
  <!-- Subtle Button -->
  <Style Selector=":is(Button).subtle">
	  <Setter Property="Foreground" Value="{DynamicResource ResourceKey=PrimaryForeground}"></Setter>
	  <Setter Property="Background" Value="{DynamicResource ResourceKey=PrimaryBackground}"></Setter>
	  <Setter Property="FontSize" Value="15"></Setter>
	 
  </Style>
  <!-- Small Button -->
  <Style Selector=":is(Button).small">
	  <Setter Property="FontSize" Value="12"></Setter>
	  <Setter Property="CornerRadius" Value="10"></Setter>
	  
  </Style>
  <!-- Outline Button -->
  <Style Selector=":is(Button).outline">
	  <Setter Property="Foreground" Value="{DynamicResource ResourceKey=PrimaryForeground}"></Setter>
	  <Setter Property="Background" Value="Transparent"></Setter>
	  <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=PrimaryButtonBackgroundGradient}"></Setter>
	  <Setter Property="BorderThickness" Value="3"></Setter>
  </Style>
  
  <!-- Alert Button -->
  <Style Selector=":is(Button).alert">
	  <Setter Property="Foreground" Value="Black"></Setter>
	  <Setter Property="Background" Value="{DynamicResource ResourceKey=PrimaryButtonAlertBackgroundGradient}"></Setter>
  </Style>

  
  
  <Style Selector=":is(Button)/template/ContentPresenter">
	 <Setter Property="Transitions">
		 <Transitions>
			 <BrushTransition Property="Foreground" Duration="0:0:0.1"/>
			 <BrushTransition Property="Background" Duration="0:0:0.1"/>
			 <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1"/>
		 </Transitions>
	 </Setter>
  </Style>
  <Style Selector=":is(Button).outline:pointerover/template/ContentPresenter">
	  <Setter Property="Foreground" Value="Black"></Setter>
	  <Setter Property="Background" Value="{DynamicResource ResourceKey=PrimaryButtonBackgroundGradient}"></Setter>
  </Style>
  
	<Style Selector=":is(Button):not(CheckBox):pointerover/template/ContentPresenter">
		<Setter Property="RenderTransform" Value="scale(1.05)"></Setter>
		<Setter Property="Background" Value="{DynamicResource ResourceKey=PrimaryHoverBackground}"></Setter>
	</Style>
  <Style Selector=":is(Button).active/template/ContentPresenter">
	 <Setter Property="Background" Value="{DynamicResource PrimaryActiveBackground}"></Setter>
  </Style>
  <Style Selector=":is(Button).transparent">
	  <Setter Property="Background" Value="Transparent"></Setter>
  </Style>
  <Style Selector=":is(Button).transparent Label.icon-only" >
	  <Setter Property="FontFamily" Value="{DynamicResource Phosphor}"></Setter>
  </Style>
</Style>

